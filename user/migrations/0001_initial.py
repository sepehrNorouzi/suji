# Generated by Django 5.1.4 on 2025-01-07 06:21

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email')),
                ('device_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Device ID')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff status')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Last name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='GuestPlayer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profile_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Profile name')),
                ('gender', models.IntegerField(choices=[(1, 'MALE'), (2, 'FEMALE'), (0, 'UNKNOWN')], default=0, verbose_name='Gender')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is blocked')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Score')),
                ('xp', models.PositiveIntegerField(default=0, editable=False, verbose_name='Xp')),
                ('cup', models.PositiveIntegerField(default=0, verbose_name='Cup')),
            ],
            options={
                'verbose_name': 'Guest player',
                'verbose_name_plural': 'Guest players',
            },
            bases=('user.user',),
        ),
        migrations.CreateModel(
            name='NormalPlayer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('profile_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Profile name')),
                ('gender', models.IntegerField(choices=[(1, 'MALE'), (2, 'FEMALE'), (0, 'UNKNOWN')], default=0, verbose_name='Gender')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Birth date')),
                ('is_blocked', models.BooleanField(default=False, verbose_name='Is blocked')),
                ('score', models.PositiveIntegerField(default=0, verbose_name='Score')),
                ('xp', models.PositiveIntegerField(default=0, editable=False, verbose_name='Xp')),
                ('cup', models.PositiveIntegerField(default=0, verbose_name='Cup')),
            ],
            options={
                'verbose_name': 'Normal player',
                'verbose_name_plural': 'Normal players',
            },
            bases=('user.user',),
        ),
    ]
