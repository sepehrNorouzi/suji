# Generated by Django 5.2.4 on 2025-08-14 12:12

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Asset Name')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='Asset Config')),
                ('type', models.CharField(choices=[('avatar', 'Avatar'), ('sticker', 'Sticker')], default='avatar', max_length=100, verbose_name='Asset Type')),
            ],
            options={
                'verbose_name': 'Asset',
                'verbose_name_plural': 'Assets',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Currency Name')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='currencies', verbose_name='Currency Icon')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='Currency Config')),
                ('type', models.CharField(choices=[('in_app', 'In App'), ('real', 'Real')], default='in_app', max_length=100, verbose_name='Currency Type')),
            ],
            options={
                'verbose_name': 'Currency',
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='LuckyWheel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('name', models.CharField(default='Wheel of fortune', max_length=255, verbose_name='Name')),
                ('cool_down', models.DurationField(default=datetime.timedelta(days=1), verbose_name='Cool down')),
            ],
            options={
                'verbose_name': 'Lucky Wheel',
                'verbose_name_plural': 'Lucky Wheel',
            },
        ),
        migrations.CreateModel(
            name='Market',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('last_version', models.IntegerField(default=0, verbose_name='last version')),
                ('support_version', models.IntegerField(default=0, verbose_name='support version')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='config')),
            ],
            options={
                'verbose_name': 'Market',
                'verbose_name_plural': 'Markets',
                'ordering': ['created_time'],
            },
        ),
        migrations.CreateModel(
            name='ShopSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='Config')),
            ],
            options={
                'verbose_name': 'Shop Section',
                'verbose_name_plural': 'Shop Sections',
            },
        ),
        migrations.CreateModel(
            name='CurrencyPackageItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='Amount')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='Config')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Currency Package Item',
                'verbose_name_plural': 'Currency Package Items',
            },
        ),
        migrations.CreateModel(
            name='RewardPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('priority', models.PositiveIntegerField(default=1, help_text='1 is More important', verbose_name='Priority')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Expired time')),
                ('image', models.ImageField(blank=True, null=True, upload_to='package', verbose_name='Image')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='Config')),
                ('support_type', models.CharField(choices=[('none', 'None'), ('purchase', 'Purchase'), ('honorary', 'Honorary'), ('reward', 'Reward')], default='none', max_length=100, verbose_name='Support Type')),
                ('vip', models.BooleanField(default=False, verbose_name='VIP')),
                ('vip_duration', models.DurationField(blank=True, null=True, verbose_name='VIP Duration')),
                ('reward_type', models.CharField(choices=[('initial_wallet', 'Initial'), ('daily', 'Daily'), ('lucky_wheel', 'Lucky Wheel'), ('match_reward', 'Match Reward')], max_length=50, verbose_name='Reward Type')),
                ('claimable', models.BooleanField(default=False, verbose_name='Claimable')),
                ('asset_items', models.ManyToManyField(blank=True, to='shop.asset', verbose_name='Asset Package Items')),
                ('currency_items', models.ManyToManyField(blank=True, to='shop.currencypackageitem', verbose_name='Currency Package Items')),
            ],
            options={
                'verbose_name': 'Reward Package',
                'verbose_name_plural': 'Reward Packages',
            },
        ),
        migrations.CreateModel(
            name='DailyRewardPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('day_number', models.PositiveIntegerField(default=1, unique=True, verbose_name='Day number')),
                ('reward', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.rewardpackage', verbose_name='Reward')),
            ],
            options={
                'verbose_name': 'Daily Reward',
                'verbose_name_plural': 'Daily Rewards',
                'ordering': ('day_number',),
            },
        ),
        migrations.CreateModel(
            name='ShopConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('player_initial_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.rewardpackage', verbose_name='Player Initial Package')),
            ],
            options={
                'verbose_name': 'Shop Configuration',
                'verbose_name_plural': 'Shop Configurations',
            },
        ),
        migrations.CreateModel(
            name='ShopPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='Start Time')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('priority', models.PositiveIntegerField(default=1, help_text='1 is More important', verbose_name='Priority')),
                ('expiration_date', models.DateTimeField(blank=True, null=True, verbose_name='Expired time')),
                ('image', models.ImageField(blank=True, null=True, upload_to='package', verbose_name='Image')),
                ('config', models.JSONField(blank=True, null=True, verbose_name='Config')),
                ('support_type', models.CharField(choices=[('none', 'None'), ('purchase', 'Purchase'), ('honorary', 'Honorary'), ('reward', 'Reward')], default='none', max_length=100, verbose_name='Support Type')),
                ('vip', models.BooleanField(default=False, verbose_name='VIP')),
                ('vip_duration', models.DurationField(blank=True, null=True, verbose_name='VIP Duration')),
                ('price_amount', models.PositiveIntegerField(default=0, verbose_name='Price Amount')),
                ('discount', models.FloatField(blank=True, default=0.0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Discount')),
                ('discount_start', models.DateTimeField(blank=True, null=True, verbose_name='Discount Start Time')),
                ('discount_end', models.DateTimeField(blank=True, null=True, verbose_name='Discount End Time')),
                ('sku', models.CharField(max_length=100, unique=True, verbose_name='SKU')),
                ('asset_items', models.ManyToManyField(blank=True, to='shop.asset', verbose_name='Asset Package Items')),
                ('currency_items', models.ManyToManyField(blank=True, to='shop.currencypackageitem', verbose_name='Currency Package Items')),
                ('markets', models.ManyToManyField(blank=True, related_name='shop_packages', to='shop.market', verbose_name='Markets')),
                ('price_currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.currency', verbose_name='Price')),
                ('shop_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='packages', to='shop.shopsection', verbose_name='Shop Section')),
            ],
            options={
                'verbose_name': 'Shop Package',
                'verbose_name_plural': 'Shop Packages',
                'ordering': ('priority',),
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('amount', models.PositiveIntegerField(default=0, verbose_name='Amount')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.currency', verbose_name='Currency')),
            ],
            options={
                'verbose_name': 'Cost',
                'verbose_name_plural': 'Costs',
                'unique_together': {('currency', 'amount')},
            },
        ),
        migrations.CreateModel(
            name='LuckyWheelSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('chance', models.PositiveIntegerField(default=0, verbose_name='Chance')),
                ('lucky_wheel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='shop.luckywheel', verbose_name='Lucky Wheel')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.rewardpackage', verbose_name='Package')),
            ],
            options={
                'verbose_name': 'Lucky Wheel Section',
                'verbose_name_plural': 'Lucky Wheel Sections',
                'unique_together': {('package', 'lucky_wheel')},
            },
        ),
    ]
