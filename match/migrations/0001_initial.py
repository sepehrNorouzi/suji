# Generated by Django 5.1.4 on 2025-07-02 08:22

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('shop', '0008_alter_rewardpackage_reward_type'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MatchConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('simultaneous_game', models.BooleanField(default=False, verbose_name='Simultaneous availability')),
            ],
            options={
                'verbose_name': 'Match Configuration',
                'verbose_name_plural': 'Match Configuration',
            },
        ),
        migrations.CreateModel(
            name='MatchType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('priority', models.PositiveSmallIntegerField(default=1, verbose_name='Priority')),
                ('min_xp', models.PositiveSmallIntegerField(default=0, verbose_name='Min XP')),
                ('min_cup', models.PositiveSmallIntegerField(default=0, verbose_name='Min Cup')),
                ('min_score', models.PositiveSmallIntegerField(default=0, verbose_name='Min Score')),
                ('config', models.JSONField(default=dict, verbose_name='Config')),
                ('winner_xp', models.PositiveSmallIntegerField(default=0, verbose_name='Winner XP')),
                ('winner_cup', models.PositiveSmallIntegerField(default=0, verbose_name='Winner Cup')),
                ('winner_score', models.PositiveSmallIntegerField(default=0, verbose_name='Winner Score')),
                ('loser_xp', models.PositiveSmallIntegerField(default=0, verbose_name='Loser XP')),
                ('loser_cup', models.PositiveSmallIntegerField(default=0, verbose_name='Loser Cup')),
                ('loser_score', models.PositiveSmallIntegerField(default=0, verbose_name='Loser Score')),
                ('entry_cost', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.cost', verbose_name='Entry cost')),
                ('loser_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_type_loser_packages', to='shop.rewardpackage', verbose_name='Loser package')),
                ('winner_package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_type_winner_packages', to='shop.rewardpackage', verbose_name='Winner package')),
            ],
            options={
                'verbose_name': 'Match Type',
                'verbose_name_plural': 'Match Types',
                'ordering': ('priority', 'name'),
            },
        ),
        migrations.CreateModel(
            name='MatchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('match_uuid', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='UUID')),
                ('history', models.JSONField(default=dict, verbose_name='History')),
                ('players', models.ManyToManyField(blank=True, related_name='game_results', to=settings.AUTH_USER_MODEL, verbose_name='Players')),
                ('match_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_results', to='match.matchtype', verbose_name='Match Type')),
            ],
            options={
                'verbose_name': 'Match Result',
                'verbose_name_plural': 'Match Results',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('updated_time', models.DateTimeField(auto_now=True, verbose_name='Updated time')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created time')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
                ('players', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Players')),
                ('match_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='matches', to='match.matchtype', verbose_name='Match Type')),
            ],
            options={
                'verbose_name': 'Match',
                'verbose_name_plural': 'Matches',
            },
        ),
    ]
